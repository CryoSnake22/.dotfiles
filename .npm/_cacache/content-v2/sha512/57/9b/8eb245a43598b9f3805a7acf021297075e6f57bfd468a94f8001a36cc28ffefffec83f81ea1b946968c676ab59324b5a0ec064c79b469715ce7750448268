{"_id":"source-map-generator","_rev":"2-9da339dd7f3b3fd3a28038eb5e82e5e3","name":"source-map-generator","dist-tags":{"next":"1.0.0","latest":"0.8.0"},"versions":{"0.8.0":{"name":"source-map-generator","description":"Generates source maps","version":"0.8.0","homepage":"https://github.com/hildjj/source-map-generator","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"},{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Simon Lydell","email":"simon.lydell@gmail.com"},{"name":"Jmeas Smith","email":"jellyes2@gmail.com"},{"name":"Michael Z Goddard","email":"mzgoddard@gmail.com"},{"name":"azu","email":"azu@users.noreply.github.com"},{"name":"John Gozde","email":"john@gozde.ca"},{"name":"Adam Kirkton","email":"akirkton@truefitinnovation.com"},{"name":"Chris Montgomery","email":"christopher.montgomery@dowjones.com"},{"name":"J. Ryan Stinnett","email":"jryans@gmail.com"},{"name":"Jack Herrington","email":"jherrington@walmartlabs.com"},{"name":"Chris Truter","email":"jeffpalentine@gmail.com"},{"name":"Daniel Espeset","email":"daniel@danielespeset.com"},{"name":"Jamie Wong","email":"jamie.lf.wong@gmail.com"},{"name":"Eddy Bruël","email":"ejpbruel@mozilla.com"},{"name":"Hawken Rives","email":"hawkrives@gmail.com"},{"name":"Gilad Peleg","email":"giladp007@gmail.com"},{"name":"djchie","email":"djchie.dev@gmail.com"},{"name":"Gary Ye","email":"garysye@gmail.com"},{"name":"Nicolas Lalevée","email":"nicolas.lalevee@hibnet.org"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"}],"repository":{"type":"git","url":"git+ssh://git@github.com/hildjj/source-map-generator.git"},"main":"./source-map.js","types":"./source-map.d.ts","publishConfig":{"tag":"next"},"engines":{"node":">= 10"},"license":"BSD-3-Clause","scripts":{"lint":"eslint --fix *.js lib/ test/","prebuild":"npm run lint","test":"node test/run-tests.js","coverage":"nyc node test/run-tests.js","setup":"mkdir -p coverage && cp -n .waiting.html coverage/index.html || true","dev:live":"live-server --port=4103 --ignorePattern='(js|css|png)$' coverage","dev:watch":"watch 'npm run coverage' lib/ test/","predev":"npm run setup","dev":"npm-run-all -p --silent dev:*","prettier":"prettier --write --print-width=120 *.{js,ts,json,md} lib/*.js test/*.js bench/bench*","clean":"rm -rf coverage .nyc_output","toc":"doctoc --title '## Table of Contents' README.md && doctoc --title '## Table of Contents' CONTRIBUTING.md"},"devDependencies":{"doctoc":"^2.0.1","eslint":"^7.32.0","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^3.4.1","live-server":"^1.2.1","npm-run-all":"^4.1.5","nyc":"^15.1.0","prettier":"2.3.2","source-map":"0.8.0-beta.0","watch":"^1.0.2"},"nyc":{"reporter":"html"},"typings":"source-map","gitHead":"7baf1b2794cb715af32bc6ae4a71d76f80306476","bugs":{"url":"https://github.com/hildjj/source-map-generator/issues"},"_id":"source-map-generator@0.8.0","_nodeVersion":"16.7.0","_npmVersion":"7.21.0","dist":{"integrity":"sha512-psgxdGMwl5MZM9S3FWee4EgsEaIjahYV5AzGnwUvPhWeITz/j6rKpysQHlQ4USdxvINlb8lKfWGIXwfkrgtqkA==","shasum":"10d5ca0651e2c9302ea338739cbd4408849c5d00","tarball":"https://registry.npmjs.org/source-map-generator/-/source-map-generator-0.8.0.tgz","fileCount":13,"unpackedSize":71289,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJAS9CRA9TVsSAnZWagAAz80QAJ0Drzd9tt6Ls9TZPd2V\nL/ZSH+hmC4gGJbaXZVFqg2we50UBukN+Xoz+wA5QQAadzlD8XOCmwypmrafk\nTja1cmtf61KovxcuPBwbVrscrDlxO1q1sf5oaoLoGAdUguqvA0P65uaU4nGI\nUhJuKXDXnLM/TR4gDkMQ5v0GyaVJV9KYhIaX8bkpCUicu08KsBnEw+1UFvk5\n/QloJq+0vfu9ZTFw3FKBvmtByhrGNRuFiKVEA4Zw8eVudo50Zn2pGyompx3b\na/66WXh8iEEBGbkHf8BCn0WIfVxB8cDGUUDGw/EkNJ6NGup5/nqHekzlxhXk\nXfv5xviizWROeR6pTb3x1t+w33UTKWPQXepbM4dhMM0frg56g4QIOtBmY8/y\nSrPAxUztz8zMeY9qwdRBlPmbyhZ8XJUCrYgew/N4wTzE6Mke3+YKc6SARd7w\nComwBV7dgeFvyhf8qnkTQh7gzIGTinEt2mNE9cUnOnOxbQqwTWS85WocRudS\nnlniKqVqk6TDdVDOW9RaJmf+UFgoMQUi+F3D40XfU+DgV35AJkY+vrx1eOcW\nxrDIU8zMy1BzNFI7Bo/qGC62GR2tBgYVryR69Uwt2WJbv7gj16PO/dnB3JUE\nnOUgCdtJQnCiWBsYh23fwd00g9FYj9JDA2Y/2jlF4g1/MHZ715pff2WtQv1a\nP7vE\r\n=O5/E\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHc7gpJmm86sObtbYOrRt/0qH79r6T48YBXOYNaQqdjmAiEAj8C4sY+Uz1LJnH0rqRoK/BMh0eNMQKxvhNpzvBk+P4Y="}]},"_npmUser":{"name":"hildjj","email":"joe-github@cursive.net"},"directories":{},"maintainers":[{"name":"hildjj","email":"joe-github@cursive.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/source-map-generator_0.8.0_1629750461629_0.6971343569352122"},"_hasShrinkwrap":false},"1.0.0":{"name":"source-map-generator","description":"Generates source maps","version":"1.0.0","homepage":"https://github.com/hildjj/source-map-generator","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"},{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Simon Lydell","email":"simon.lydell@gmail.com"},{"name":"Jmeas Smith","email":"jellyes2@gmail.com"},{"name":"Michael Z Goddard","email":"mzgoddard@gmail.com"},{"name":"azu","email":"azu@users.noreply.github.com"},{"name":"John Gozde","email":"john@gozde.ca"},{"name":"Adam Kirkton","email":"akirkton@truefitinnovation.com"},{"name":"Chris Montgomery","email":"christopher.montgomery@dowjones.com"},{"name":"J. Ryan Stinnett","email":"jryans@gmail.com"},{"name":"Jack Herrington","email":"jherrington@walmartlabs.com"},{"name":"Chris Truter","email":"jeffpalentine@gmail.com"},{"name":"Daniel Espeset","email":"daniel@danielespeset.com"},{"name":"Jamie Wong","email":"jamie.lf.wong@gmail.com"},{"name":"Eddy Bruël","email":"ejpbruel@mozilla.com"},{"name":"Hawken Rives","email":"hawkrives@gmail.com"},{"name":"Gilad Peleg","email":"giladp007@gmail.com"},{"name":"djchie","email":"djchie.dev@gmail.com"},{"name":"Gary Ye","email":"garysye@gmail.com"},{"name":"Nicolas Lalevée","email":"nicolas.lalevee@hibnet.org"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"}],"repository":{"type":"git","url":"git+ssh://git@github.com/hildjj/source-map-generator.git"},"main":"./source-map.js","types":"./source-map.d.ts","publishConfig":{"tag":"next"},"engines":{"node":">= 12"},"license":"BSD-3-Clause","scripts":{"lint":"eslint --fix *.js lib/ test/","test":"node test/run-tests.js","coverage":"c8 --reporter=text --reporter=html npm test","prettier":"prettier --write .","clean":"rm -rf coverage","toc":"doctoc --github --notitle README.md CONTRIBUTING.md"},"devDependencies":{"c8":"^8.0.0","doctoc":"^2.2.1","eslint":"^8.43.0","eslint-config-prettier":"^8.8.0","prettier":"^2.8.8","source-map":"0.7.4"},"pnpm":{"overrides":{"semver":">=7.5.3","word-wrap":"npm:@aashutoshrathi/word-wrap"}},"overrides":{"semver":">=7.5.3","word-wrap":"npm:@aashutoshrathi/word-wrap"},"engine":{"node":">=16"},"readme":"# Source Map\n\n[![Tests](https://github.com/hildjj/source-map-generator/actions/workflows/node.js.yml/badge.svg)](https://github.com/hildjj/source-map-generator/actions/workflows/node.js.yml)\n\n[![codecov](https://codecov.io/gh/hildjj/source-map-generator/branch/main/graph/badge.svg?token=M80IXLBBLD)](https://codecov.io/gh/hildjj/source-map-generator)\n\n[![NPM](https://nodei.co/npm/source-map-generator.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map-generator)\n\nThis is a library to generate the source map format\n[described here][format]. It is a close fork of [source-map](https://github.com/mozilla/source-map), which also provides a source map consumer.\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map-generator\n\n## Use on the Web\n\n```html\n<script src=\"https://unpkg.com/source-map-generator@0.8.0/dist/source-map.js\"></script>\n<script>\n  const map = new SourceMapGenerator({\n    file: \"source-mapped.js\",\n  });\n</script>\n```\n\n---\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Examples](#examples)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n    case \"BinaryExpression\":\n      return new SourceNode(\n        ast.location.line,\n        ast.location.column,\n        ast.location.source,\n        [compile(ast.left), \" + \", compile(ast.right)]\n      );\n    case \"Literal\":\n      return new SourceNode(\n        ast.location.line,\n        ast.location.column,\n        ast.location.source,\n        String(ast.value)\n      );\n    // ...\n    default:\n      throw new Error(\"Bad AST\");\n  }\n}\n\nvar ast = parse(\"40 + 2\", \"add.js\");\nconsole.log(\n  compile(ast).toStringWithSourceMap({\n    file: \"add.js\",\n  })\n);\n// { code: '40 + 2',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: \"source-mapped.js\",\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35,\n  },\n  source: \"foo.js\",\n  original: {\n    line: 33,\n    column: 2,\n  },\n  name: \"christopher\",\n});\n\nconsole.log(map.toString());\n// '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require(\"source-map-generator\");\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\");\n```\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n- `file`: The filename of the generated source that this source map is\n  associated with.\n\n- `sourceRoot`: A root for all relative URLs in this source map.\n\n- `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: \"my-generated-javascript-file.js\",\n  sourceRoot: \"http://example.com/app/js/\",\n});\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n- `generated`: An object with the generated line and column positions.\n\n- `original`: An object with the original line and column positions.\n\n- `source`: The original source file (relative to the sourceRoot).\n\n- `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: \"module-one.scm\",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 },\n});\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n- `sourceFile` the URL of the original source file.\n\n- `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent(\n  \"module-one.scm\",\n  fs.readFileSync(\"path/to/module-one.scm\")\n);\n```\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString();\n// '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n- `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line. The line number is 1-based.\n\n- `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column. The column number\n  is 0-based.\n\n- `source`: The original source's filename; null if no filename is provided.\n\n- `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n- `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, \"a.cpp\", [\n  new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"),\n  new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"),\n  new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"),\n]);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n- `chunk`: A string snippet of generated JS code, another instance of\n  `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(\" + \");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, \" + \", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n- `chunk`: A string snippet of generated JS code, another instance of\n  `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n- `sourceFile`: The filename of the source file\n\n- `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent(\n  \"module-one.scm\",\n  fs.readFileSync(\"path/to/module-one.scm\")\n);\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n- `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\")],\n]);\n\nnode.walk(function (code, loc) {\n  console.log(\"WALK:\", code, loc);\n});\n// WALK: uno { source: 'b.js', line: 3, column: 4, name: null }\n// WALK: dos { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: tres { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n- `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, \"a.js\", \"generated from a\");\na.setSourceContent(\"a.js\", \"original a\");\nvar b = new SourceNode(1, 2, \"b.js\", \"generated from b\");\nb.setSourceContent(\"b.js\", \"original b\");\nvar c = new SourceNode(1, 2, \"c.js\", \"generated from c\");\nc.setSourceContent(\"c.js\", \"original c\");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) {\n  console.log(\"WALK:\", source, \":\", contents);\n});\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n- `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\");\nvar operand = new SourceNode(3, 4, \"a.rs\", \"=\");\nvar rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\");\n\nvar node = new SourceNode(null, null, null, [lhs, operand, rhs]);\nvar joinedNode = node.join(\" \");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n- `pattern`: The pattern to replace.\n\n- `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, \"\");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\")],\n]);\n\nnode.toString();\n// 'unodostresquatro'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\"tres\", new SourceNode(5, 6, \"c.js\", \"quatro\")],\n]);\n\nnode.toStringWithSourceMap({ file: \"my-output-file.js\" });\n// { code: 'unodostresquatro',\n//   map: [object SourceMapGenerator] }\n```\n","readmeFilename":"README.md","gitHead":"064ee7aeb19ec2941446365adf43ad8e4f28ab93","bugs":{"url":"https://github.com/hildjj/source-map-generator/issues"},"_id":"source-map-generator@1.0.0","_nodeVersion":"20.3.1","_npmVersion":"9.7.2","dist":{"integrity":"sha512-FLglbw2P/OLzPU9h9IDpBTYJxz+kNfmnQyu2C466H9Ib93STpEK/y5kZb5j7C0XdkmPSNl3nmYC6LkUX2eR7LQ==","shasum":"496ebb0f393b7ebeef343522ed593f5c83129a5d","tarball":"https://registry.npmjs.org/source-map-generator/-/source-map-generator-1.0.0.tgz","fileCount":13,"unpackedSize":71073,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEaD2MdqGJrPR+nfkRkgrCiiJRv0KPJf7IDsvwEuy3XcAiEA8Kp8ozf0c8+pLgW1r+EAJhG/ntLglLeTvveofIXmxrU="}]},"_npmUser":{"name":"hildjj","email":"joe-github@cursive.net"},"directories":{},"maintainers":[{"name":"hildjj","email":"joe-github@cursive.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/source-map-generator_1.0.0_1688139620471_0.0032665745770121823"},"_hasShrinkwrap":false}},"time":{"created":"2021-08-23T20:27:41.628Z","0.8.0":"2021-08-23T20:27:41.762Z","modified":"2023-06-30T15:40:20.837Z","1.0.0":"2023-06-30T15:40:20.717Z"},"maintainers":[{"name":"hildjj","email":"joe-github@cursive.net"}],"description":"Generates source maps","homepage":"https://github.com/hildjj/source-map-generator","repository":{"type":"git","url":"git+ssh://git@github.com/hildjj/source-map-generator.git"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"},{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Simon Lydell","email":"simon.lydell@gmail.com"},{"name":"Jmeas Smith","email":"jellyes2@gmail.com"},{"name":"Michael Z Goddard","email":"mzgoddard@gmail.com"},{"name":"azu","email":"azu@users.noreply.github.com"},{"name":"John Gozde","email":"john@gozde.ca"},{"name":"Adam Kirkton","email":"akirkton@truefitinnovation.com"},{"name":"Chris Montgomery","email":"christopher.montgomery@dowjones.com"},{"name":"J. Ryan Stinnett","email":"jryans@gmail.com"},{"name":"Jack Herrington","email":"jherrington@walmartlabs.com"},{"name":"Chris Truter","email":"jeffpalentine@gmail.com"},{"name":"Daniel Espeset","email":"daniel@danielespeset.com"},{"name":"Jamie Wong","email":"jamie.lf.wong@gmail.com"},{"name":"Eddy Bruël","email":"ejpbruel@mozilla.com"},{"name":"Hawken Rives","email":"hawkrives@gmail.com"},{"name":"Gilad Peleg","email":"giladp007@gmail.com"},{"name":"djchie","email":"djchie.dev@gmail.com"},{"name":"Gary Ye","email":"garysye@gmail.com"},{"name":"Nicolas Lalevée","email":"nicolas.lalevee@hibnet.org"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"}],"author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"bugs":{"url":"https://github.com/hildjj/source-map-generator/issues"},"license":"BSD-3-Clause","readme":"","readmeFilename":""}